{"version":3,"sources":["components/Contact.js","components/Contacts.js","App.js","reportWebVitals.js","index.js"],"names":["Contact","className","this","props","contact","firstName","lastName","phone","gender","Component","Contacts","state","contacts","input","handleSearchChange","event","setState","target","value","userInput","Value","filter","toLowerCase","includes","type","placeholder","onChange","map","i","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAiBeA,E,4JAbX,WACI,OACI,sBAAKC,UAAU,YAAf,UACA,oBAAGA,UAAU,OAAb,UAAoB,+CAAyBC,KAAKC,MAAMC,QAAQC,aAChE,oBAAGJ,UAAU,YAAb,UAAyB,8CAAwBC,KAAKC,MAAMC,QAAQE,YACpE,oBAAGL,UAAU,eAAb,UAA4B,gDAA0BC,KAAKC,MAAMC,QAAQG,SACzE,oBAAGN,UAAU,SAAb,UAAsB,2CAAqBC,KAAKC,MAAMC,QAAQI,iB,GAPpDC,aC+DPC,E,4MA7DXC,MAAQ,CACJC,SAAU,CAAC,CACPP,UAAW,uCACXC,SAAU,2EACVC,MAAO,gBACPC,OAAQ,QACT,CACCH,UAAW,iCACXC,SAAU,+DACVC,MAAO,gBACPC,OAAQ,UACT,CACCH,UAAW,uCACXC,SAAU,2EACVC,MAAO,gBACPC,OAAO,QACR,CACCH,UAAW,iCACXC,SAAU,mDACVC,MAAO,gBACPC,OAAQ,UACT,CACCH,UAAW,uCACXC,SAAU,yDACVC,MAAO,gBACPC,OAAQ,QACT,CACCH,UAAW,uCACXC,SAAU,6CACVC,MAAO,gBACPC,OAAQ,SAEZK,MAAM,I,EAEVC,mBAAqB,SAAAC,GACjB,EAAKC,SAAS,CAACH,MAAOE,EAAME,OAAOC,S,4CAGxC,WACI,IAAIC,EACEC,EAAQlB,KAAKS,MAAME,MAS5B,OARIM,EAAsB,KAAVC,EACZD,EAAYjB,KAAKS,MAAMC,SAASS,QAAO,SAACjB,GAAD,OACvCA,EAAQE,SAASgB,cAAcC,SAASH,EAAME,gBAC9ClB,EAAQC,UAAUiB,cAAcC,SAASH,EAAME,gBAC/ClB,EAAQG,MAAMgB,SAASH,MACtBlB,KAAKS,MAAMC,SAIZ,sBAAKX,UAAY,mBAAjB,UACI,qBAAKA,UAAY,SAAjB,SACI,uBAAOA,UAAW,aAAauB,KAAO,OAAOC,YAAY,gEAAeP,MAAShB,KAAKS,MAAME,MAAOa,SAAYxB,KAAKY,uBAEtHK,EAAUQ,KAAI,SAACvB,EAASwB,GAAV,OAAgB,cAAC,EAAD,CAASxB,QAASA,GAAcwB,a,GAvDrDnB,aCURoB,EATH,WACV,OAAQ,mCACR,qBAAK5B,UAAU,qBAAf,SACE,cAAC,EAAD,SCIW6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.bbaaf6b0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './styles.css';\r\n\r\nclass Contact extends Component {\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n            <p className='name'><span>First name:</span>{this.props.contact.firstName}</p>\r\n            <p className='last-name'><span>Last name:</span>{this.props.contact.lastName}</p>\r\n            <p className='phone-number'><span>Phone number</span>{this.props.contact.phone}</p>   \r\n            <p className='gender'><span>Gender:</span>{this.props.contact.gender}</p>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport './styles.css';\r\n\r\nclass Contacts extends Component {\r\n    state = {\r\n        contacts: [{\r\n            firstName: \"Барней\",\r\n            lastName: \"Стинсовський\",\r\n            phone: \"+380956319521\",\r\n            gender: \"male\"\r\n        }, {\r\n            firstName: \"Робін\",\r\n            lastName: \"Щербатська\",\r\n            phone: \"+380931460123\",\r\n            gender: \"female\"\r\n        }, {\r\n            firstName: \"Джозеф\",\r\n            lastName: \"Трібіанський\",\r\n            phone: \"+380981238756\",\r\n            gender:\"male\"\r\n        }, {\r\n            firstName: \"Лілія\",\r\n            lastName: \"Олдровна\",\r\n            phone: \"+380504691254\",\r\n            gender: \"female\"\r\n        }, {\r\n            firstName: \"Маршен\",\r\n            lastName: \"Еріксонян\",\r\n            phone: \"+380739432123\",\r\n            gender: \"male\"\r\n        }, {\r\n            firstName: \"Теодор\",\r\n            lastName: \"Мотсбес\",\r\n            phone: \"+380956319521\",\r\n            gender: \"male\"\r\n        }],\r\n        input:''\r\n    }\r\n    handleSearchChange = event => {\r\n        this.setState({input: event.target.value})\r\n    }\r\n\r\n   render() {\r\n       let userInput;\r\n       const Value = this.state.input;\r\n        userInput = Value !== '' ?\r\n        userInput = this.state.contacts.filter((contact) => \r\n        contact.lastName.toLowerCase().includes(Value.toLowerCase()) ||\r\n        contact.firstName.toLowerCase().includes(Value.toLowerCase()) ||\r\n        contact.phone.includes(Value))  \r\n        :this.state.contacts\r\n        \r\n    \r\n    return ( \r\n        <div className = \"contacts-wrapper\">\r\n            <div className = \"search\">\r\n                <input className ='user-input' type = \"text\" placeholder='Введите имя'  value = {this.state.input} onChange = {this.handleSearchChange} />\r\n            </div>\r\n            { userInput.map((contact, i) => <Contact contact={contact} key={i} />) }\r\n        </div>\r\n     );\r\n   }\r\n\r\n}\r\n\r\nexport default Contacts;","import './App.css';\n\nimport Contacts from './components/Contacts'\n\n\nconst App = () => {\n  return (<>\n  <div className='contacts-container'>\n    <Contacts/>\n  </div>\n    </>\n    )\n  }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}